_ip_write:
  begin
//eeprom.c,20 :: 		I2C_Init(100000);      // initialize full master mode
	asm: MOVLW	62
	asm: MOVWF	SSPADD
	CALL _I2C_Init
//eeprom.c,21 :: 		I2C_Start();          // issue start signal
	CALL _I2C_Start
//eeprom.c,22 :: 		I2C_Wr(0xA0);         // Slave address m24c16, write
	FARG_I2C_Wr+0 <- 160
	CALL _I2C_Wr
//eeprom.c,23 :: 		I2C_Wr(0x00);         // Byte adress
	FARG_I2C_Wr+0 <- 0
	CALL _I2C_Wr
//eeprom.c,25 :: 		I2C_Wr(myIpAddr[0]);            // запись 1-го байта IP
	FARG_I2C_Wr+0 <- _myIpAddr
	CALL _I2C_Wr
//eeprom.c,26 :: 		I2C_Wr(myIpAddr[1]);         // 2
	FARG_I2C_Wr+0 <- _myIpAddr+1
	CALL _I2C_Wr
//eeprom.c,27 :: 		I2C_Wr(myIpAddr[2]);         // 3
	FARG_I2C_Wr+0 <- _myIpAddr+2
	CALL _I2C_Wr
//eeprom.c,28 :: 		I2C_Wr(myIpAddr[3]);         // 4
	FARG_I2C_Wr+0 <- _myIpAddr+3
	CALL _I2C_Wr
//eeprom.c,29 :: 		I2C_Stop();           // issue stop signal
	CALL _I2C_Stop
//eeprom.c,31 :: 		I2C_Start();          // issue start signal
	CALL _I2C_Start
//eeprom.c,32 :: 		I2C_Wr(0xA0);         // Slave address m24c16, write
	FARG_I2C_Wr+0 <- 160
	CALL _I2C_Wr
//eeprom.c,33 :: 		I2C_Wr(0x01);         // Byte adress
	FARG_I2C_Wr+0 <- 1
	CALL _I2C_Wr
//eeprom.c,35 :: 		I2C_Wr('E');            // запись 1-го символа
	FARG_I2C_Wr+0 <- 69
	CALL _I2C_Wr
//eeprom.c,36 :: 		I2C_Wr('E');         // 2
	FARG_I2C_Wr+0 <- 69
	CALL _I2C_Wr
//eeprom.c,37 :: 		I2C_Wr('E');         // 3
	FARG_I2C_Wr+0 <- 69
	CALL _I2C_Wr
//eeprom.c,38 :: 		I2C_Wr('E');         // 4
	FARG_I2C_Wr+0 <- 69
	CALL _I2C_Wr
//eeprom.c,39 :: 		I2C_Stop();           // issue stop signal
	CALL _I2C_Stop
//eeprom.c,41 :: 		myMacAddr[3] = myIpAddr[1];
	_myMacAddr+3 <- _myIpAddr+1
//eeprom.c,42 :: 		myMacAddr[4] = myIpAddr[2];
	_myMacAddr+4 <- _myIpAddr+2
//eeprom.c,43 :: 		myMacAddr[5] = myIpAddr[3];
	_myMacAddr+5 <- _myIpAddr+3
  end

_ip_read:
  begin
//eeprom.c,50 :: 		I2C_Init(100000);         // initialize I2C
	asm: MOVLW	62
	asm: MOVWF	SSPADD
	CALL _I2C_Init
//eeprom.c,51 :: 		I2C_Start();
	CALL _I2C_Start
//eeprom.c,52 :: 		I2C_Wr(0xA0);                 // Slave address m24c16, write
	FARG_I2C_Wr+0 <- 160
	CALL _I2C_Wr
//eeprom.c,53 :: 		I2C_Wr(0x00);                 // Byte adress
	FARG_I2C_Wr+0 <- 0
	CALL _I2C_Wr
//eeprom.c,54 :: 		I2C_Repeated_Start();
	CALL _I2C_Repeated_Start
//eeprom.c,55 :: 		I2C_Wr(0xA1);                 // Slave address m24c16, read
	FARG_I2C_Wr+0 <- 161
	CALL _I2C_Wr
//eeprom.c,57 :: 		myIpAddr[0] =I2C_Rd(1);         // чтение 1-го байта IP
	FARG_I2C_Rd+0 <- 1
	CALL _I2C_Rd
	_myIpAddr <- STACK_0
//eeprom.c,58 :: 		myIpAddr[1] =I2C_Rd(1);         //
	FARG_I2C_Rd+0 <- 1
	CALL _I2C_Rd
	_myIpAddr+1 <- STACK_0
//eeprom.c,59 :: 		myIpAddr[2] =I2C_Rd(1);         //
	FARG_I2C_Rd+0 <- 1
	CALL _I2C_Rd
	_myIpAddr+2 <- STACK_0
//eeprom.c,60 :: 		myIpAddr[3] =I2C_Rd(0);         //
	FARG_I2C_Rd+0 <- 0
	CALL _I2C_Rd
	_myIpAddr+3 <- STACK_0
//eeprom.c,61 :: 		I2C_Stop();
	CALL _I2C_Stop
//eeprom.c,63 :: 		myMacAddr[3] = myIpAddr[1];
	_myMacAddr+3 <- _myIpAddr+1
//eeprom.c,64 :: 		myMacAddr[4] = myIpAddr[2];
	_myMacAddr+4 <- _myIpAddr+2
//eeprom.c,65 :: 		myMacAddr[5] = myIpAddr[3];
	_myMacAddr+5 <- _myIpAddr+3
  end

